" Vundle Configuration
" First you need to install Vundle: git clone https://github.com/VundleVim/Vundle.vim.git ~/.vim/bundle/Vundle.vim
set nocompatible     " be iMproved, required
filetype off         " required
"
" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')
"
" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'
"
" Additional plugins
" Keep Plugin commands between vundle#begin/end.
" CTRL+P - https://github.com/ctrlpvim/ctrlp.vim
Plugin 'ctrlpvim/ctrlp.vim'
" Editorconfig - https://github.com/editorconfig/editorconfig-vim
Plugin 'editorconfig/editorconfig-vim'
" Emmet Vim - https://github.com/mattn/emmet-vim
Plugin 'mattn/emmet-vim'
" NERD Commenter - https://github.com/scrooloose/nerdcommenter
Plugin 'scrooloose/nerdcommenter'
" Syntastic - https://github.com/scrooloose/syntastic
Plugin 'scrooloose/syntastic'
" Vim Airline - https://github.com/bling/vim-airline
Plugin 'bling/vim-airline'
" Vim BufOnly - https://github.com/schickling/vim-bufonly
Plugin 'schickling/vim-bufonly'
" Vim Solarized (colorscheme) - https://github.com/altercation/vim-colors-solarized
Plugin 'altercation/vim-colors-solarized'
" Vim EasyMotion - https://github.com/Lokaltog/vim-easymotion
Plugin 'Lokaltog/vim-easymotion'
" Vim Surround - https://github.com/tpope/vim-surround
Plugin 'tpope/vim-surround'
" YouCompleteMe - https://github.com/Valloric/YouCompleteMe
Plugin 'Valloric/YouCompleteMe'
" TernJS - https://github.com/ternjs/tern_for_vim
Plugin 'ternjs/tern_for_vim'
" Vim JSX - https://github.com/mxw/vim-jsx
Plugin 'mxw/vim-jsx'

" Set tabs to 4 spaces
set tabstop=4

" Set shift width indent
set shiftwidth=4

" Set code editor indenting
set smartindent
set autoindent

" Set autocompletion
set wildmode=list:longest

" Enable tree folding
set foldenable

" Enable syntax highlighting
syntax on

" Set colorscheme
set background=dark
colorscheme solarized

" Enable line numbers
set number

" Highlight current line
set cursorline

" Don't set cursor to start of line when moving around
set nostartofline

" Show invisible characters
set listchars=eol:~,tab:>-,trail:*
set list

" Show the cursor position
set ruler

" Show current mode
set showmode

" Respect modeline in files
set modeline
set modelines=4

" Highlight searches
set hlsearch

" Ignore case of searches
set ignorecase

" Highlight dynamically as pattern is typed
set incsearch

" Always show status line
set laststatus=2

" Enable mouse in all modes
set mouse=a

" Show filename in window titlebar
set title

" Show the partial command as it is being typed
set showcmd

" Start scrolling three lines before the horizontal window border
set scrolloff=3

" Add the g flag to search/replace by default
set gdefault

" Change mapleader
let mapleader=','

"Centralize backups, swapfiles, and undo history
set backupdir=~/.vim/backups
set directory=~/.vim/swaps
if exists("&undodir")
	set undodir=~/.vim/undo
endif

" Use relative line numbers
if exists("&relativenumber")
	set relativenumber
	au BufReadPost * set relativenumber
endif

" Strip trailing whitespaces (,ss)
function! StripWhitespace()
	let save_cursor = getpos('.')
	let old_query = getreg('/')
	:%s/\s\+$//e
	call setpos('.', save_cursor)
	call setreg('/', old_query)
endfunction
noremap <leader>ss :call StripWhitespace()<CR>

" Quicker window switching
map <c-j> <c-w>j
map <c-k> <c-w>k
map <c-l> <c-w>l
map <c-h> <c-w>h

" Enable filetype plugins (nerdcommenter - https://github.com/scrooloose/nerdcommenter)
filetype plugin on

" Emmet settings and remappings
let g:user_emmet_leader_key = '<C-n>'
let g:uder_emmet_expandabbr_key = '<s-tab>'
let g:user_emmet_togglecomment_key = '<c-_>'

" NERDTree settings
noremap <leader><tab> :NERDTree<CR>
let g:NERDTreeDirArrows=0

" Specific file type settings
if has("autocmd")
	autocmd BufNewFile,BufRead *.scss set filetype=scss
	autocmd FileType javascript set omnifunc=javascriptcomplete#CompleteJS
	autocmd FileType html set omnifunc=htmlcomplete#CompleteTags
	autocmd FileType css set omnifunc=csscomplete#CompleteCSS
	autocmd FileType php set omnifunc=phpcomplete#CompletePHP

	"add auto-close curly-braces
	autocmd FileType html,css,scss,javascript,php inoremap <buffer> { {}<Left>
	autocmd FileType html,css,scss,javascript,php inoremap <buffer> {} {}
	autocmd FileType html,css,scss,javascript,php inoremap <buffer> {<CR> {<CR>}<Esc>O
	autocmd FileType htmldjango inoremap <buffer> {{ {{<space><space>}}<Left><Left><Left>
	autocmd FileType htmldjango inoremap <buffer> {% {%<space><space>%}<Left><Left><Left>
	
	"add auto-close parenthesis
	autocmd FileType html,css,scss,javascript,php inoremap <buffer> ( ()<Left>

	"add auto-close brackets
	autocmd FileType html,css,scss,javascript,php inoremap <buffer> [ []<Left>

	""add auto-close quotes
	autocmd FileType html,css,scss,javascript,php inoremap <buffer> ' ''<Left>
	autocmd FileType html,css,scss,javascript,php inoremap <buffer> " ""<Left>
endif
